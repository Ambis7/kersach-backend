// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-1.1.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role { //Создвет типы ы призме енам если что
  
  DOCTOR
  ADMIN
  
}
model User {
  id        String     @id @default(uuid())
  email     String   @unique
  password  String
  name String
  role      Role   @default(DOCTOR) // Например, "doctor", "admin"
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  medicalReports MedicalReport[]
}

model Patient {
  id          String      @id @default(uuid())
  fullName    String
  birthDate   DateTime
  medicalHistory String? // История болезней
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  medicalReports MedicalReport[]
  research Research[]
}

model MedicalReport {
  id            String      @id @default(uuid())
  patientId     String
  doctorId      String
  reportType    String   @default("cardiology") // Тип отчета (кардиология)
  diagnosis     String?
  findings      Json     // Детали исследования (например, результаты ЭКГ)
  conclusion    String?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  patient  Patient @relation(fields: [patientId], references: [id])
  doctor   User    @relation(fields: [doctorId], references: [id])
}

model Research {
  id          String      @id @default(uuid())
  patientId   String
  type        String   @default("ECG") // Тип исследования (ЭКГ, УЗИ и т.д.)
  data        Json     // Данные исследования (например, графики, измерения)
  status      String   @default("pending") // Статус: pending, completed, reviewed
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  patient Patient @relation(fields: [patientId], references: [id])
}