{
  "openapi": "3.0.0",
  "paths": {
    "/": {
      "get": {
        "operationId": "AppController_getHello",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "App"
        ]
      }
    },
    "/users": {
      "post": {
        "operationId": "UserController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created"
          },
          "400": {
            "description": "Bad request"
          }
        },
        "summary": "Create a new user",
        "tags": [
          "users"
        ]
      },
      "get": {
        "operationId": "UserController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": "List of users"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get all users",
        "tags": [
          "users"
        ]
      }
    },
    "/users/{id}": {
      "get": {
        "operationId": "UserController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User details"
          },
          "404": {
            "description": "User not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get a user by ID",
        "tags": [
          "users"
        ]
      },
      "put": {
        "operationId": "UserController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User updated"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Update a user",
        "tags": [
          "users"
        ]
      },
      "delete": {
        "operationId": "UserController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Delete a user",
        "tags": [
          "users"
        ]
      }
    },
    "/auth/register": {
      "post": {
        "operationId": "AuthController_register",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registered successfully"
          }
        },
        "summary": "Register a new user",
        "tags": [
          "auth"
        ]
      }
    },
    "/auth/login": {
      "post": {
        "operationId": "AuthController_login",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User logged in successfully"
          }
        },
        "summary": "Login a user",
        "tags": [
          "auth"
        ]
      }
    },
    "/patients": {
      "post": {
        "operationId": "PatientController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePatientDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Patient created"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Create a new patient",
        "tags": [
          "patients"
        ]
      },
      "get": {
        "operationId": "PatientController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": "List of patients"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get all patients",
        "tags": [
          "patients"
        ]
      }
    },
    "/patients/{id}": {
      "get": {
        "operationId": "PatientController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Patient details"
          },
          "404": {
            "description": "Patient not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get a patient by ID",
        "tags": [
          "patients"
        ]
      },
      "put": {
        "operationId": "PatientController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePatientDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Patient updated"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Update a patient",
        "tags": [
          "patients"
        ]
      },
      "delete": {
        "operationId": "PatientController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Patient deleted"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Delete a patient",
        "tags": [
          "patients"
        ]
      }
    },
    "/medical-reports": {
      "post": {
        "operationId": "MedicalReportController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMedicalReportDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Report created"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Create a new medical report",
        "tags": [
          "medical-reports"
        ]
      },
      "get": {
        "operationId": "MedicalReportController_findAll",
        "parameters": [
          {
            "name": "patientId",
            "required": false,
            "in": "query",
            "description": "Filter by patient ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of reports"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get all medical reports",
        "tags": [
          "medical-reports"
        ]
      }
    },
    "/medical-reports/{id}": {
      "get": {
        "operationId": "MedicalReportController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Report details"
          },
          "404": {
            "description": "Report not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get a medical report by ID",
        "tags": [
          "medical-reports"
        ]
      },
      "put": {
        "operationId": "MedicalReportController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateMedicalReportDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Report updated"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Update a medical report",
        "tags": [
          "medical-reports"
        ]
      },
      "delete": {
        "operationId": "MedicalReportController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Report deleted"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Delete a medical report",
        "tags": [
          "medical-reports"
        ]
      }
    },
    "/research": {
      "post": {
        "operationId": "ResearchController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateResearchDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Research created"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Create a new research",
        "tags": [
          "research"
        ]
      },
      "get": {
        "operationId": "ResearchController_findAll",
        "parameters": [
          {
            "name": "patientId",
            "required": false,
            "in": "query",
            "description": "Filter by patient ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of research"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get all research",
        "tags": [
          "research"
        ]
      }
    },
    "/research/{id}": {
      "get": {
        "operationId": "ResearchController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Research details"
          },
          "404": {
            "description": "Research not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get a research by ID",
        "tags": [
          "research"
        ]
      },
      "put": {
        "operationId": "ResearchController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateResearchDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Research updated"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Update a research",
        "tags": [
          "research"
        ]
      },
      "delete": {
        "operationId": "ResearchController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Research deleted"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Delete a research",
        "tags": [
          "research"
        ]
      }
    }
  },
  "info": {
    "title": "My NestJS API",
    "description": "API documentation for the NestJS application",
    "version": "1.0",
    "contact": {}
  },
  "tags": [
    {
      "name": "auth",
      "description": "Operations related to auth"
    },
    {
      "name": "users",
      "description": "Operations related to users"
    }
  ],
  "servers": [],
  "components": {
    "securitySchemes": {
      "bearer": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "type": "http"
      }
    },
    "schemas": {
      "CreateUserDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "doctor@example.com"
          },
          "password": {
            "type": "string",
            "example": "password123"
          },
          "name": {
            "type": "string",
            "example": "Dr. John Doe"
          },
          "role": {
            "type": "string",
            "enum": [
              "DOCTOR",
              "ADMIN"
            ],
            "default": "DOCTOR"
          }
        },
        "required": [
          "email",
          "password",
          "name",
          "role"
        ]
      },
      "UpdateUserDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "doctor@example.com"
          },
          "password": {
            "type": "string",
            "example": "newpassword123"
          },
          "name": {
            "type": "string",
            "example": "Dr. Jane Doe"
          },
          "role": {
            "type": "string",
            "enum": [
              "DOCTOR",
              "ADMIN"
            ]
          }
        }
      },
      "RegisterDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "The email of the user",
            "example": "user@example.com"
          },
          "password": {
            "type": "string",
            "description": "The password of the user",
            "example": "password123"
          },
          "name": {
            "type": "string",
            "description": "The name of the user",
            "example": "John Doe"
          },
          "role": {
            "type": "string",
            "description": "The role of the user",
            "enum": [
              "ADMIN",
              "DOCTOR"
            ]
          }
        },
        "required": [
          "email",
          "password",
          "name",
          "role"
        ]
      },
      "LoginDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "The email of the user",
            "example": "user@example.com"
          },
          "password": {
            "type": "string",
            "description": "The password of the user",
            "example": "password123"
          }
        },
        "required": [
          "email",
          "password"
        ]
      },
      "CreatePatientDto": {
        "type": "object",
        "properties": {
          "fullName": {
            "type": "string",
            "example": "John Doe"
          },
          "birthDate": {
            "type": "string",
            "example": "1990-01-01"
          },
          "medicalHistory": {
            "type": "string",
            "example": "Hypertension"
          }
        },
        "required": [
          "fullName",
          "birthDate"
        ]
      },
      "UpdatePatientDto": {
        "type": "object",
        "properties": {
          "fullName": {
            "type": "string",
            "example": "John Doe"
          },
          "birthDate": {
            "type": "string",
            "example": "1990-01-01"
          },
          "medicalHistory": {
            "type": "string",
            "example": "Hypertension"
          }
        }
      },
      "CreateMedicalReportDto": {
        "type": "object",
        "properties": {
          "patientId": {
            "type": "string",
            "example": "patient-uuid"
          },
          "reportType": {
            "type": "string",
            "example": "cardiology"
          },
          "diagnosis": {
            "type": "string",
            "example": "Hypertension detected"
          },
          "findings": {
            "type": "string",
            "example": "{\"ecg\": \"normal\"}"
          },
          "conclusion": {
            "type": "string",
            "example": "Monitor condition"
          }
        },
        "required": [
          "patientId",
          "reportType",
          "findings"
        ]
      },
      "UpdateMedicalReportDto": {
        "type": "object",
        "properties": {
          "reportType": {
            "type": "string",
            "example": "cardiology"
          },
          "diagnosis": {
            "type": "string",
            "example": "Hypertension detected"
          },
          "findings": {
            "type": "string",
            "example": "{\"ecg\": \"normal\"}"
          },
          "conclusion": {
            "type": "string",
            "example": "Monitor condition"
          }
        }
      },
      "CreateResearchDto": {
        "type": "object",
        "properties": {
          "patientId": {
            "type": "string",
            "example": "patient-uuid"
          },
          "type": {
            "type": "string",
            "example": "ECG"
          },
          "data": {
            "type": "string",
            "example": "{\"waveform\": \"data\"}"
          },
          "status": {
            "type": "string",
            "example": "pending"
          }
        },
        "required": [
          "patientId",
          "type",
          "data",
          "status"
        ]
      },
      "UpdateResearchDto": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "ECG"
          },
          "data": {
            "type": "string",
            "example": "{\"waveform\": \"data\"}"
          },
          "status": {
            "type": "string",
            "example": "completed"
          }
        }
      }
    }
  }
}